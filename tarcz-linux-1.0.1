#!/bin/bash
#tarcz
#Coded by Z3R07-RED on Mar 13 2021
#
#VARIABLES:
termux_path="/data/data/com.termux/files/usr/bin"
kali_linux_path="/usr/bin"
# Define colors
# Bold font colors
R='\e[0;31m\033[1m'
G='\e[0;32m\033[1m'
Y='\e[0;33m\033[1m'
B='\e[0;34m\033[1m'
M='\e[0;35m\033[1m'
C='\e[0;36m\033[1m'
W='\033[0m\e[0m'


#CTRL+C
trap ctrl_c INT

function ctrl_c(){
echo $(clear)
echo "Program aborted."
echo "";exit 1
}

#FUNCTIONS:
# dependencies
function dependencies(){
if [[ -d "$kali_linux_path" ]]; then
   ZEROAPT="apt-get"
else
    ZEROAPT="apt"
fi

counter_dn=0
sleep 0.2

dependencies=(tar progress) # dependencies
for program in "${dependencies[@]}"; do
    if [ ! "$(command -v $program)" ]; then
        echo -e "\n${R}[X]${W}${C} $program${Y} is not installed.${W}"
        sleep 0.8
        echo -e "\n\e[1;33m[i]\e[0m${C} Installing ...${W}"
        $ZEROAPT install $program -y > /dev/null 2>&1
        echo -e "\n\e[1;32m[V]\e[0m${C} $program${Y} installed.${W}"
        sleep 1
        let counter_dn+=1
    fi
done
}

function respaldo_start(){
echo ""
sleep 0.3
echo "[+] ¿Como se va llamar el respaldo?"
echo ""
while read -p "--- " New_BACKUP && [ -z "$New_BACKUP" ]; do

	echo ""
	echo "--- ¿Como se va llamar el respaldo?"
	echo ""

done

echo ""
echo "[+] ¿Dónde se guardará la copia de seguridad?"
echo ""
while read -p "--- " dpath && [ -z "$dpath" ]; do
    echo ""
    echo "--- ¿Dónde se guardará la copia de seguridad?"
    echo ""
done

if [[ -n "$dpath" ]]; then
    DIRNME=$(basename "$dpath")
    ZERO=$(echo "$dpath" |awk -F "$DIRNME" '{print $2}' 2>/dev/null)
    if [[ -n "$ZERO" ]]; then
        ZERO2=$(echo "$dpath" |awk -F "$DIRNME" '{print $1}' 2>/dev/null)
        dpath="${ZERO2}${DIRNME}"
    fi
else
    echo ""
    echo "Program aborted."
    exit 1
fi

if [[ -d "$dpath" ]]; then

	echo ""
	echo "........................"
	sleep 0.3
    echo -e "\033[1;36m--- CREANDO RESPALDO ---\033[0m"
    echo "........................"
	sleep 0.3

else
    echo ""
    echo -e "\033[0;30;43m[ALERTA]${W}${Y} ¡El directorio no existe!\n\n${C}¿Quieres crearlo? [Yes/No]${W}"
    echo ""
    while read -p "--- " -n 1 ALERTA && [ -z "$ALERTA" ]; do
        echo ""
        echo -e "${C}--- ¿Quieres crearlo? [Yes/No]${W}"
        echo ""

    done

    if [[ "$ALERTA" == "Y" || "$ALERTA" == "y" || "$ALERTA" == "S" || "$ALERTA" == "s" ]]; then
        mkdir -p --verbose "$dpath"
        echo "--- Directorio: '$dpath' Creado..."
        sleep 0.3
    else
        echo ""
        echo "Program aborted."
        exit 0
    fi

fi

if [[ -e "$dpath/$New_BACKUP.tgz" ]]; then
	echo ""
	echo -e "\033[1;37mArchivo '\033[1;31m$New_BACKUP.tgz\033[1;37m' ya existe!\033[0m"
	echo "'$dpath/$New_BACKUP.tgz'"
    exit 1

else
	tar -czf "$dpath/$New_BACKUP.tgz" "$parametro" | progress  -m
    sleep 0.1
    echo ""
    tar -tvf "$dpath/$New_BACKUP.tgz"
 	echo ""
	echo "Respaldo Realizado Exitosamente en :"
    echo -e "$dpath/\033[1;32m$New_BACKUP.tgz\033[0m"
	echo ""
    exit 0

fi
}

dependencies

if [[ -z "$1" ]]; then
	echo ""
	echo "Usage: tarcz [DIRECTORY]"
	echo "   or: tarcz [FILE]"
    echo ""
    echo "Try 'tarcz --help' for more information."
    echo ""
	exit 0

elif [[ -d "$1" ]]; then
	echo ""
	echo -e "\033[0m[\033[1;32m√\033[0m] Se ingreso el Directorio:\033[1;32m '$1'\033[0m"
    parametro=$1
    respaldo_start

elif [[ -f "$1" ]]; then
	echo ""
	echo -e "\033[0m[\033[1;32m√\033[0m] Se ingreso el Archivo:\033[1;32m $1\033[0m"
    parametro=$1
    respaldo_start

else
	if [[ "$1" == "-d" ]]; then
        if [[ -n "$2" ]]; then
            echo "Descomprimiendo el archivo .tgz ..."
            tar -xzvf "$2"
            echo ""
        else
            echo "Error: '-d' requires parameter."
            echo "Try 'tarcz --help' for more information."
            echo ""
            exit 1
        fi

    elif [[ "$1" = "--help" ]]; then
		echo ""
		echo "tarcz v1.0.1 (c) 2021-2022 by Z3R07-RED"
		echo "Usage: tarcz [DIRECTORY]"
		echo "   or: tarcz [FILENAME ]"
		echo ""
        echo " Examples:"
        echo "          tarcz filename.txt"
        echo "          tarcz DIRECTORY/"
        echo ""
        echo "To unzip the file:"
        echo " -d [file]         decompress"
        echo ""
        echo " Examples:"
        echo "          tarcz -d file.tgz"
        echo ""
		exit 0
	else
		echo ""
		echo "El Parametro No Corresponde a un Archivo o Directorio."
		exit 1
	fi
fi

